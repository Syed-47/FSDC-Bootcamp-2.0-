# -*- coding: utf-8 -*-
"""Assignment 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RP--Fqdf2ZPwa6MRqZRXLXMn1_MEe4u4

# 1.What are the two values of the Boolean data type? How do you write them?

Ans: Two vaues of Boolean data type are 

True or False.

we can write them as : 

A = True

B = False

c = (1==3)

# 2. What are the three different types of Boolean operators?

Ans: 3 Boolean operators are = AND | OR | NOT

# 3. Make a list of each Boolean operators truth tables (i.e. every possible combination of Boolean values for the operator and what it evaluate).

--- AND  Table:

    A     |    B     | A and B
 
   True   |   True   |  True
   
   True   |   False  |  False

   False  |   True   |  False

   False  |   False  |  False

--- OR Table:

    A     |    B     | A or B
 
   True   |   True   |  True
   
   True   |   False  |  True

   False  |   True   |  True

   False  |   False  |  False


--- NOT Table:

    A     |    not A

   True   |    False

   Flase  |    True

# 4. What are the values of the following expressions?

Answers: 

(5 > 4) and (3 == 5)   =  False

not (5 > 4)  =  Fasle

(5 > 4) or (3 == 5)   =  True

not ((5 > 4) or (3 == 5)) =  False

(True and True) and (True == False)  = False

(not False) or (not True)  = true

# 5. What are the six comparison operators?

Answer: 6 comparision operators

>	Greater than – True if left operand is greater than the right	 x > y

<	Less than – True if left operand is less than the right	x < y

==	Equal to – True if both operands are equal	x == y

!=	Not equal to – True if operands are not equal	x != y

>=	Greater than or equal to – True if left operand is greater than or equal to the right	x >= y

<=	Less than or equal to – True if left operand is less than or equal to the right	x <= y

# 6. How do you tell the difference between the equal to and assignment operators?Describe a condition and when you would use one.

Ans: The difference between = (Assignment) and == (Equal to) operators. 

The “=” is an assignment operator is used to assign the value on the right to the variable on the left. 

The '==' operator checks whether the two given operands are equal or not. If so, it returns true.


Example: A = 10
         B = 10 
         C = (A==B)

# 7. Identify the three blocks in this code:

spam = 0
if spam == 10:
    print('eggs')
if spam > 5:
    print('bacon')
else:
    print('ham') 
    print('spam')
    print('spam')
"""

# Answer
spam = 0
if spam == 10:
    print('eggs') #Block 1
if spam > 5:
    print('bacon') #Block 2
else:
    print('ham') #Block 3
    print('spam')
    print('spam')

"""# 8. Write code that prints Hello if 1 is stored in spam, prints Howdy if 2 is stored in spam, and prints Greetings! if anything else is stored in spam."""

spam = int(input("Enter number: "))
if spam == 1:
  print('Hello')
elif spam == 5:
  print('Howdy')
else:
    print('Greetings!')

"""# 9.If your programme is stuck in an endless loop, what keys you’ll press?

Ans: If program is stuck in endless loop we will press ctrl+c.

#  10. How can you tell the difference between break and continue?

Ans: The main difference between both the statements is that when **break** keyword comes, it terminates the execution of the current loop and passes the control over the next loop or main body, whereas when **continue** keyword is encountered, it skips the current iteration and executes the very next iteration in the loop.

Example program:
"""

# use of break
for i in range(10):
  if(i==7):
      break
  print(i)
print('Breaked')

#use of  continue
for i in range(10):
  if(i==7):
      continue
  print(i)

"""# 11. In a for loop, what is the difference between range(10), range(0, 10), and range(0, 10, 1)?


Ans: From the below output we can conclude that they all do the same thing. The range(10) call ranges from 0 up to (but not including) 10, range(0, 10) tells the loop to start at 0, and range(0, 10, 1) tells the loop to increase the variable by 1 on each iteration.
"""

for i in range(10):
  print(i)
print("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx") 
for i in range(0,10):
  print(i)
print("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx")
for i in range(0,10,1):
  print(i)

"""# 12. Write a short program that prints the numbers 1 to 10 using a for loop. Then write an equivalent program that prints the numbers 1 to 10 using a while loop."""

# using of for loop

for i in range(1,11):
  print(i)

# using of while loop
i = 1
while i<=10:
  print(i)
  i = i+1

"""# 13. If you had a function named bacon() inside a module named spam, how would you call it after importing spam?

Ans: This function can be called with **spam.bacon()**.
"""

